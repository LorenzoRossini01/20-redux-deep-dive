{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { uiActions } from \"./index\";\nimport { cartActions } from \"./index\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    addToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          quantity: 1,\n          price: newItem.price,\n          totalPrice: newItem.price,\n          title: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeFromCart(state, action) {\n      const itemId = action.payload;\n      const existingItem = state.items.find(item => item.id === itemId);\n      state.totalQuantity--;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== itemId);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n  }\n});\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.setNotification({\n      status: \"pending\",\n      title: \"Sending\",\n      message: \"Sending cart data\"\n    }));\n    const sendRequest = async () => {\n      const response = await fetch(\"https://react-redux-deep-dive-704e6-default-rtdb.europe-west1.firebasedatabase.app/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to send cart data\");\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(uiActions.setNotification({\n        status: \"success\",\n        title: \"Success\",\n        message: \"Sending cart data successfully...\"\n      }));\n    } catch (err) {\n      dispatch(uiActions.setNotification({\n        status: \"error\",\n        title: \"Error\",\n        message: err.message\n      }));\n    }\n  };\n};\nexport const fetchCartData = () => {\n  return async dispatch => {\n    dispatch(uiActions.setNotification({\n      status: \"pending\",\n      title: \"Fetching\",\n      message: \"Fetching cart data\"\n    }));\n    const fetchRequest = async () => {\n      const response = await fetch(\"https://react-redux-deep-dive-704e6-default-rtdb.europe-west1.firebasedatabase.app/cart.json\");\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch cart data\");\n      }\n      const data = await response.json();\n      if (data) {\n        dispatch(cartActions.setCart(data));\n      }\n    };\n    fetchRequest();\n  };\n};\nexport default cartSlice;","map":{"version":3,"names":["createSlice","uiActions","cartActions","cartSlice","name","initialState","items","totalQuantity","reducers","addToCart","state","action","newItem","payload","existingItem","find","item","id","push","quantity","price","totalPrice","title","removeFromCart","itemId","filter","sendCartData","cart","dispatch","setNotification","status","message","sendRequest","response","fetch","method","body","JSON","stringify","ok","Error","err","fetchCartData","fetchRequest","data","json","setCart"],"sources":["C:/Users/loryr/Desktop/Corso React/20-redux-deep-dive/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { uiActions } from \"./index\";\r\nimport { cartActions } from \"./index\";\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: {\r\n    items: [],\r\n    totalQuantity: 0,\r\n  },\r\n  reducers: {\r\n    addToCart(state, action) {\r\n      const newItem = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === newItem.id);\r\n      state.totalQuantity++;\r\n      if (!existingItem) {\r\n        state.items.push({\r\n          id: newItem.id,\r\n          quantity: 1,\r\n          price: newItem.price,\r\n          totalPrice: newItem.price,\r\n          title: newItem.title,\r\n        });\r\n      } else {\r\n        existingItem.quantity++;\r\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\r\n      }\r\n    },\r\n    removeFromCart(state, action) {\r\n      const itemId = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === itemId);\r\n      state.totalQuantity--;\r\n\r\n      if (existingItem.quantity === 1) {\r\n        state.items = state.items.filter((item) => item.id !== itemId);\r\n      } else {\r\n        existingItem.quantity--;\r\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const sendCartData = (cart) => {\r\n  return async (dispatch) => {\r\n    dispatch(\r\n      uiActions.setNotification({\r\n        status: \"pending\",\r\n        title: \"Sending\",\r\n        message: \"Sending cart data\",\r\n      })\r\n    );\r\n    const sendRequest = async () => {\r\n      const response = await fetch(\r\n        \"https://react-redux-deep-dive-704e6-default-rtdb.europe-west1.firebasedatabase.app/cart.json\",\r\n        { method: \"PUT\", body: JSON.stringify(cart) }\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to send cart data\");\r\n      }\r\n    };\r\n\r\n    try {\r\n      await sendRequest();\r\n\r\n      dispatch(\r\n        uiActions.setNotification({\r\n          status: \"success\",\r\n          title: \"Success\",\r\n          message: \"Sending cart data successfully...\",\r\n        })\r\n      );\r\n    } catch (err) {\r\n      dispatch(\r\n        uiActions.setNotification({\r\n          status: \"error\",\r\n          title: \"Error\",\r\n          message: err.message,\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchCartData = () => {\r\n  return async (dispatch) => {\r\n    dispatch(\r\n      uiActions.setNotification({\r\n        status: \"pending\",\r\n        title: \"Fetching\",\r\n        message: \"Fetching cart data\",\r\n      })\r\n    );\r\n    const fetchRequest = async () => {\r\n      const response = await fetch(\r\n        \"https://react-redux-deep-dive-704e6-default-rtdb.europe-west1.firebasedatabase.app/cart.json\"\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to fetch cart data\");\r\n      }\r\n      const data = await response.json();\r\n      if (data) {\r\n        dispatch(cartActions.setCart(data));\r\n      }\r\n    };\r\n    fetchRequest();\r\n  };\r\n};\r\n\r\nexport default cartSlice;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}