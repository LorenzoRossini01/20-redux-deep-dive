{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialCartState = {\n  isOpen: false,\n  items: []\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: [],\n  reducers: {\n    addToCart: (state, action) => {\n      const item = action.payload;\n      const existingItem = state.find(i => i.title === item.title);\n    }\n  }\n});\nconst store = configureStore({\n  reducer: {\n    // Define your reducers here\n  }\n});\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","initialCartState","isOpen","items","cartSlice","name","initialState","reducers","addToCart","state","action","item","payload","existingItem","find","i","title","store","reducer"],"sources":["C:/Users/loryr/Desktop/Corso React/20-redux-deep-dive/src/store/index.js"],"sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\r\n\r\nconst initialCartState = { isOpen: false, items: [] };\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: [],\r\n  reducers: {\r\n    addToCart: (state, action) => {\r\n      const item = action.payload;\r\n      const existingItem = state.find((i) => i.title === item.title);\r\n    },\r\n  },\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    // Define your reducers here\r\n  },\r\n});\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAE9D,MAAMC,gBAAgB,GAAG;EAAEC,MAAM,EAAE,KAAK;EAAEC,KAAK,EAAE;AAAG,CAAC;AACrD,MAAMC,SAAS,GAAGL,WAAW,CAAC;EAC5BM,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE;IACRC,SAAS,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC5B,MAAMC,IAAI,GAAGD,MAAM,CAACE,OAAO;MAC3B,MAAMC,YAAY,GAAGJ,KAAK,CAACK,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,KAAK,KAAKL,IAAI,CAACK,KAAK,CAAC;IAChE;EACF;AACF,CAAC,CAAC;AAEF,MAAMC,KAAK,GAAGjB,cAAc,CAAC;EAC3BkB,OAAO,EAAE;IACP;EAAA;AAEJ,CAAC,CAAC;AAEF,eAAeD,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}