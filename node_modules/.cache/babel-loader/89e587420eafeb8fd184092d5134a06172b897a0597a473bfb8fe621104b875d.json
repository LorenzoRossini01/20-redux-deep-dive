{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    addToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      if (existingItem) {\n        existingItem.quantity++;\n        totalPrice = totalprice + newItem.price;\n      } else {\n        state.items.push({\n          id: newItem.id,\n          quantity: newItem.quantity,\n          price: newItem.price,\n          totalPrice: newItem.price,\n          title: newItem.title\n        });\n      }\n    },\n    removeFromCart(state, action) {\n      const item = action.payload;\n      const index = state.items.findIndex(i => i.id === item.id);\n      if (index >= 0) {\n        state.items.splice(index, 1);\n      }\n      state.totalQuantity -= item.quantity;\n      if (state.totalQuantity === 0) {\n        state.items = [];\n      }\n    },\n    updateCartQuantity(state, action) {}\n  }\n});\nexport default cartSlice;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","reducers","addToCart","state","action","newItem","payload","existingItem","find","item","id","quantity","totalPrice","totalprice","price","push","title","removeFromCart","index","findIndex","i","splice","updateCartQuantity"],"sources":["C:/Users/loryr/Desktop/Corso React/20-redux-deep-dive/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: {\r\n    items: [],\r\n    totalQuantity: 0,\r\n  },\r\n  reducers: {\r\n    addToCart(state, action) {\r\n      const newItem = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === newItem.id);\r\n      if (existingItem) {\r\n        existingItem.quantity++;\r\n        totalPrice = totalprice + newItem.price;\r\n      } else {\r\n        state.items.push({\r\n          id: newItem.id,\r\n          quantity: newItem.quantity,\r\n          price: newItem.price,\r\n          totalPrice: newItem.price,\r\n          title: newItem.title,\r\n        });\r\n      }\r\n    },\r\n    removeFromCart(state, action) {\r\n      const item = action.payload;\r\n      const index = state.items.findIndex((i) => i.id === item.id);\r\n      if (index >= 0) {\r\n        state.items.splice(index, 1);\r\n      }\r\n      state.totalQuantity -= item.quantity;\r\n      if (state.totalQuantity === 0) {\r\n        state.items = [];\r\n      }\r\n    },\r\n    updateCartQuantity(state, action) {},\r\n  },\r\n});\r\n\r\nexport default cartSlice;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,aAAa,EAAE;EACjB,CAAC;EACDC,QAAQ,EAAE;IACRC,SAASA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACvB,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9B,MAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAK,CAACS,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MACvE,IAAIH,YAAY,EAAE;QAChBA,YAAY,CAACI,QAAQ,EAAE;QACvBC,UAAU,GAAGC,UAAU,GAAGR,OAAO,CAACS,KAAK;MACzC,CAAC,MAAM;QACLX,KAAK,CAACJ,KAAK,CAACgB,IAAI,CAAC;UACfL,EAAE,EAAEL,OAAO,CAACK,EAAE;UACdC,QAAQ,EAAEN,OAAO,CAACM,QAAQ;UAC1BG,KAAK,EAAET,OAAO,CAACS,KAAK;UACpBF,UAAU,EAAEP,OAAO,CAACS,KAAK;UACzBE,KAAK,EAAEX,OAAO,CAACW;QACjB,CAAC,CAAC;MACJ;IACF,CAAC;IACDC,cAAcA,CAACd,KAAK,EAAEC,MAAM,EAAE;MAC5B,MAAMK,IAAI,GAAGL,MAAM,CAACE,OAAO;MAC3B,MAAMY,KAAK,GAAGf,KAAK,CAACJ,KAAK,CAACoB,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACV,EAAE,KAAKD,IAAI,CAACC,EAAE,CAAC;MAC5D,IAAIQ,KAAK,IAAI,CAAC,EAAE;QACdf,KAAK,CAACJ,KAAK,CAACsB,MAAM,CAACH,KAAK,EAAE,CAAC,CAAC;MAC9B;MACAf,KAAK,CAACH,aAAa,IAAIS,IAAI,CAACE,QAAQ;MACpC,IAAIR,KAAK,CAACH,aAAa,KAAK,CAAC,EAAE;QAC7BG,KAAK,CAACJ,KAAK,GAAG,EAAE;MAClB;IACF,CAAC;IACDuB,kBAAkBA,CAACnB,KAAK,EAAEC,MAAM,EAAE,CAAC;EACrC;AACF,CAAC,CAAC;AAEF,eAAeR,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}